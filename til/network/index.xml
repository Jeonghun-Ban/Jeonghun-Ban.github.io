<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Jeonghun-Ban – Network</title><link>http://Jeonghun-Ban.github.io/til/network/</link><description>Recent content in Network on Jeonghun-Ban</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Mon, 16 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="http://Jeonghun-Ban.github.io/til/network/index.xml" rel="self" type="application/rss+xml"/><item><title>Til: Types</title><link>http://Jeonghun-Ban.github.io/til/network/types/</link><pubDate>Mon, 16 Nov 2020 00:00:00 +0000</pubDate><guid>http://Jeonghun-Ban.github.io/til/network/types/</guid><description>
&lt;h2 id="데이터-전송-방식">데이터 전송 방식&lt;/h2>
&lt;p>네트워크에서 데이터가 항상 순서대로 최적의 경로를 따라 전송되지는 않으며, 전송 방식에 따라 데이터 전송 속도는 차이가 발생한다.&lt;/p>
&lt;h3 id="회선-교환망">회선 교환망&lt;/h3>
&lt;ul>
&lt;li>통신 전에 물리적인 연결로 전용 통신 선로를 설정&lt;/li>
&lt;li>통신이 끝날 때까지 연결을 독점적으로 사용&lt;/li>
&lt;li>전화망이 대표적인 예시&lt;/li>
&lt;/ul>
&lt;h3 id="패킷-교환망">패킷 교환망&lt;/h3>
&lt;ul>
&lt;li>전송하고자 하는 정보를 &lt;code>패킷&lt;/code>이라는 단위로 나눔&lt;/li>
&lt;li>각각의 패킷에는 발신자와 수신지의 주소가 담김&lt;/li>
&lt;li>패킷 교환기(라우터)가 수신지까지 전달&lt;/li>
&lt;li>회선 통신망과 달리 통신 경로가 확정적이지 않음&lt;/li>
&lt;li>네트워크 상태에 따라 여러 경로로 전송됨&lt;/li>
&lt;/ul>
&lt;h3 id="셀-교환망">셀 교환망&lt;/h3>
&lt;ul>
&lt;li>망 내에서는 프로토콜을 간략화하여 데이터를 셀이라고 부르는 패킷 단위로 전송&lt;/li>
&lt;li>셀은 전송에 필요한 최소 기능만을 담당&lt;/li>
&lt;li>흐름 제어와 오류 제어는 단말 간에서 처리&lt;/li>
&lt;li>비동기 전송 방식(ATM)이 대표적인 형태&lt;/li>
&lt;li>고속 네트워크 전송에 효율적&lt;/li>
&lt;/ul>
&lt;h2 id="위상">위상&lt;/h2>
&lt;h3 id="버스형">버스형&lt;/h3>
&lt;ul>
&lt;li>통신 회선 하나를 모든 노드가 공유&lt;/li>
&lt;li>한 노드가 전송한 메시지 모든 노드에게 전달&lt;/li>
&lt;li>노드가 많으면 통신 시 충돌이 발생 &amp;amp; 속도 저하&lt;/li>
&lt;/ul>
&lt;h3 id="스타형">스타형&lt;/h3>
&lt;ul>
&lt;li>중앙 제어 노드가 모든 통신 제어&lt;/li>
&lt;li>스위칭 허브의 등장으로 발전된 형태&lt;/li>
&lt;li>노드 간 데이터가 다른 노드에겐 전달 X&lt;/li>
&lt;li>중앙 노드의 성능에 크게 좌우됨&lt;/li>
&lt;li>중앙 제어 노드가 작동하지 않으면 네트워크 마비&lt;/li>
&lt;/ul>
&lt;h3 id="링형">링형&lt;/h3>
&lt;ul>
&lt;li>토큰 네트워크가 이것의 일종임&lt;/li>
&lt;li>한 노드에 이상이 생기면 통신망 마비&lt;/li>
&lt;li>토큰을 받아야 데이터 전송 가능
&lt;ul>
&lt;li>지연 시간 발생&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="허브트리형">허브/트리형&lt;/h3>
&lt;ul>
&lt;li>계층적 구조&lt;/li>
&lt;li>작은 버스형 네트워크 여러 개를 연결&lt;/li>
&lt;/ul>
&lt;h2 id="규모">규모&lt;/h2>
&lt;h3 id="lanlocal-area-network">LAN(Local Area Network)&lt;/h3>
&lt;ul>
&lt;li>일반적으로 300m 이하의 통신 회선으로 연결된 PC 메인 프레임과 워크스테이션의 집합을 의미&lt;/li>
&lt;li>한 건물에서 가장 효과적으로 사용할 수 있도록 연결된 고속 통신망&lt;/li>
&lt;/ul>
&lt;h3 id="manmetropolitan-area-network">MAN(Metropolitan Area Network)&lt;/h3>
&lt;ul>
&lt;li>LAN을 고속의 백본(backbone)으로 묶은 형태, LAN 수준의 높은 데이터 전송률을 제공&lt;/li>
&lt;li>LAN보다는 크지만 WAN보다는 작은 지역에서 사용 가능&lt;/li>
&lt;/ul>
&lt;h3 id="wanwide-area-network">WAN(Wide Area Network)&lt;/h3>
&lt;ul>
&lt;li>지리적으로 흩어진 통신망을 의미&lt;/li>
&lt;li>지방과 지방, 국가와 국가, 대륙과 대륙을 연결&lt;/li>
&lt;/ul></description></item><item><title>Til: Protocol</title><link>http://Jeonghun-Ban.github.io/til/network/protocol/</link><pubDate>Mon, 16 Nov 2020 00:00:00 +0000</pubDate><guid>http://Jeonghun-Ban.github.io/til/network/protocol/</guid><description>
&lt;h2 id="기본-요소">기본 요소&lt;/h2>
&lt;ul>
&lt;li>구문(Syntax)
&lt;ul>
&lt;li>전송하고자 하는 데이터의 형식, 부호화, 신호 레벨등을 규정&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>의미(Semantics)
&lt;ul>
&lt;li>두 기기 간의 효율적이고 정확한 정보 전송을 위한 협조 사항과 오류 관리를 위한 제어 정보를 규정&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>시간(Timing)
&lt;ul>
&lt;li>두 기기 간의 통신 속도, 메시지의 순서 제어 등을 규정&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="기능">기능&lt;/h2>
&lt;h3 id="주소-설정">주소 설정&lt;/h3>
&lt;p>한 개체가 상태 개체에 데이터를 전송하려면 상대의 이름을 알아야 하는데, 프로토콜에는 각 전송 계층에 맞는 주소를 지정하는 기능이 있다.&lt;/p>
&lt;h3 id="순서-제어">순서 제어&lt;/h3>
&lt;p>프로토콜 데이터 단위가 전송될 때 보내지는 순서를 명시하는 기능으로, 연결 지향성에만 사용한다.&lt;/p>
&lt;blockquote>
&lt;p>프로토콜 데이터 단위(PDU, Protocol Data Unit): 데이터 전송 시, 일정 크기의 데이터 블록&lt;/p>
&lt;/blockquote>
&lt;p>순서를 지정하는 이유는 전달, 흐름 제어, 오류 제어 등을 위해서이다. PDU를 상대 개체에 보내면 수신측에서 순서에 맍게 데이터를 재구성한다. 이때 잘못된 PDU는 재전송을 요구한다.&lt;/p>
&lt;h3 id="단편화-및-재조합">단편화 및 재조합&lt;/h3>
&lt;p>대용량 파일의 경우 한 번에 전달하는 것이 불가능하므로 전송 효율이 높은 작은 단위로 나누어 전송한다. 이를 수신하는 시스템에서는 응용 프로그램에서 사용하기 위해 재조합해야 한다.&lt;/p>
&lt;h3 id="캡슐화">캡슐화&lt;/h3>
&lt;p>데이터에 제어 정보를 덧붙이는 것으로 SDU에 PCI를 더하는 과정이라 할 수 있다.&lt;/p>
&lt;pre>&lt;code>PDU(Protocol Data Unit) = SDU(Service Data Unit) + PCI(Protocol Control Information)
# SDU: 전송하려는 데이터
# PCI: 제어 정보(주소, 오류검출코드, 프로토콜 제어 정보 등)
&lt;/code>&lt;/pre>&lt;p>이러한 캡슐화는 해커로부터 통신 내용을 숨길 수 있게 한다.&lt;/p>
&lt;h3 id="연결-제어">연결 제어&lt;/h3>
&lt;p>데이터를 교환할 때 연결 설정 여부에 따라 두 가지로 나뉨&lt;/p>
&lt;ul>
&lt;li>연결 지향형 데이터 전송
&lt;ul>
&lt;li>연결 설정 -&amp;gt; 데이터 전송 -&amp;gt; 연결 해제&lt;/li>
&lt;li>데이터 전송 중 연결 지속&lt;/li>
&lt;li>대표적 예시: TCP&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>비연결 지향형 데이터 전송
&lt;ul>
&lt;li>이렇게 전송되는 데이터 = 데이터그램&lt;/li>
&lt;li>대표적 예시: UDP&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="흐름-제어">흐름 제어&lt;/h3>
&lt;p>송신측에서 오는 데이터의 양이나 속도를 조절하는 기능으로 정보 유실을 방지한다.&lt;/p>
&lt;ul>
&lt;li>정지-대기(stop and wait)
&lt;ul>
&lt;li>패킷 하나를 보낸 후 응답이 오면 다음 패킷 전송&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>슬라이딩 윈도우(sliding window)
&lt;ul>
&lt;li>가용 데이터 분량의 패킷을 한번에 보낸 뒤 응답받음&lt;/li>
&lt;li>이후 동일한 양의 패킷을 한번에 전송&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="오류-제어">오류 제어&lt;/h3>
&lt;p>데이터를 교환할 때 SDU나 PCI가 잘못되었을 경우, 이를 발견하는 기법&lt;/p>
&lt;ul>
&lt;li>패리티 비트(parity bit)&lt;/li>
&lt;li>순환 잉여도 검사(CRC, Cyclic Redundancy Check)&lt;/li>
&lt;/ul>
&lt;p>순서를 검사하거나 특정 시간 안에 받지 못하면 재전송을 요구하는 방식&lt;/p>
&lt;h3 id="동기화">동기화&lt;/h3>
&lt;p>데이터를 전송할 때 각 개체는 특정 타이머 값이나 윈도우 크기 등을 기억해야 하는데, 이것들을 공유하는 것을 동기화라 한다.&lt;/p>
&lt;h3 id="다중화">다중화&lt;/h3>
&lt;p>통신 선로 하나에서 여러 시스템이 동시에 통신할 수 있는 기법&lt;/p>
&lt;h3 id="전송-서비스">전송 서비스&lt;/h3>
&lt;p>우선순위 결정, 서비스 등급과 보안 요구 등을 제어하는 서비스&lt;/p>
&lt;h2 id="종류">종류&lt;/h2>
&lt;p>프로토콜의 종류를 설명하기 위해서 OSI 7계층과 함께 살펴보도록 하겠다.&lt;/p>
&lt;p>&lt;img src="images/2020-05-27-22-18-02.png" alt="프로토콜의 종류">&lt;/p>
&lt;h3 id="데이터-링크-계층">데이터 링크 계층&lt;/h3>
&lt;p>OSI 7계층에서 물리 계층 위에 있는 2번째 계층이다. 하드웨어에 대한 MAC(Media Access Control) 주소를 기반으로 하드웨어 간 통신을 위한 프로토콜을 제공한다.&lt;/p>
&lt;h4 id="이더넷-프로토콜">이더넷 프로토콜&lt;/h4>
&lt;ul>
&lt;li>제록스의 PARC에서 1970년대에 개발&lt;/li>
&lt;li>패킷 최소 길이: 64KB, 최대 길이: 1,518KB&lt;/li>
&lt;li>1980년대 IEEE 802.3이 규약의 기초&lt;/li>
&lt;li>현재는 CSMA/CD LAN을 이르는 말로 사용됨&lt;/li>
&lt;/ul>
&lt;h3 id="네트워크-계층">네트워크 계층&lt;/h3>
&lt;p>OSI 7계층의 3계층으로, 논리적인 주소인 IP주소를 이용해 통신하기 위한 프로토콜을 제공한다.&lt;/p>
&lt;h4 id="arpaddress-resolution-protocol">ARP(Address Resolution Protocol)&lt;/h4>
&lt;ul>
&lt;li>네트워크 계층에서의 통신을 위해서는 하위 계층인 데이터 링크 간의 통신 경로가 확보되어야 함.
&lt;ul>
&lt;li>IP간 통신을 위해서는 MAC 주소를 확보가 우선&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>ARP은 IP를 보조하기 위한 프로토콜
&lt;ul>
&lt;li>MAC 주소를 사용해 통신을 하지만 정보로 담기는 값 = IP&lt;/li>
&lt;li>데이터 링크 계층과 네트워크 계층 중간에 위치한다고 볼 수 있음&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>RARP는 ARP의 반대 역할
&lt;ul>
&lt;li>MAC 주소를 가지고 IP를 확인하는 프로토콜&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="ipinternet-protocol">IP(Internet Protocol)&lt;/h4>
&lt;ul>
&lt;li>하위 계층의 서비스를 이용하여 두 노드 간의 데이터 전송 경로를 확립
&lt;ul>
&lt;li>데이터 링크 계층은 같은 회선(LAN 구간) 간 통신&lt;/li>
&lt;li>네트워크 계층은 회선이 서로 다른 노드 사이(WAN 구간) 통신&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>IP(v4)는 32자리 2진수로 개수 제한
&lt;ul>
&lt;li>체계적 사용을 위한 규칙이 있음&lt;/li>
&lt;li>A~E클래스로 구분
&lt;ul>
&lt;li>A 클래스: 첫 자리 네트워크 주소, 나머지 호스트 주소&lt;/li>
&lt;li>B 클래스: 두 자리 네트워크 주소, 나머지 호스트 주소&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>C 클래스: 세 자리 네트워크 주소, 나머지 호스트 주소&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="icmpinternet-control-message-protocol">ICMP(Internet Control Message Protocol)&lt;/h4>
&lt;ul>
&lt;li>호스트 서버와 인터넷 게이트웨이 사이에서 메시지 제어, 오류 검출&lt;/li>
&lt;li>비연결 지향형 프로토콜인 IP를 보조하여 패킷 전송을 보장한다.&lt;/li>
&lt;li>ping이 대표적인 예&lt;/li>
&lt;/ul>
&lt;h4 id="igmpinternet-group-management-protocol">IGMP(Internet Group Management Protocol)&lt;/h4>
&lt;p>멀티 캐스트에 관여하는 프로토콜로 멀티캐스트 그룹을 관리&lt;/p>
&lt;pre>&lt;code>IP 통신 방식
- 유니캐스트
- 한 호스트에서 다른 호스트로 전송한 것
- 일반적인 IP 데이터 전송은 모두 이것을 사용
- 브로드캐스트
- 호스트에서 IP 네트워크 상 전체 호스트로 데이터 전송
- 일반적인 브로트캐스트는 `255.255.255.255`
- 멀티캐스트*
- 그룹에 속한 모든 호스트에게 전달
- D 클래스 주소 대역을 사용
&lt;/code>&lt;/pre>&lt;h3 id="전송-계층-프로토콜">전송 계층 프로토콜&lt;/h3>
&lt;p>응용 프로그램 주소를 포트 번호로 이용해 통신하는 프로토콜을 제공&lt;/p>
&lt;h4 id="tcptransmission-control-protocol">TCP(Transmission Control Protocol)&lt;/h4>
&lt;p>전송 계층에서 동작하는 연결 지향형 프로토콜&lt;/p>
&lt;ul>
&lt;li>특징
&lt;ul>
&lt;li>높은 신뢰성&lt;/li>
&lt;li>연결의 설정과 해제&lt;/li>
&lt;li>시간 초과와 재전송&lt;/li>
&lt;li>가상 회선 연결 방식&lt;/li>
&lt;li>데이터 체크섬&lt;/li>
&lt;li>데이터 흐름 제어&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>연결을 설정하는 과정을 3-way handshacking이라 한다.&lt;/p>
&lt;p>&lt;strong>연결 생성 과정&lt;/strong>&lt;/p>
&lt;p>&lt;img src="images/2020-05-28-03-29-09.png" alt="연결 생성 과정">&lt;/p>
&lt;ol>
&lt;li>클라이언트는 포트가 Closed 상태이고 서버는 Listen 상태&lt;/li>
&lt;li>클라이언트는 임의의 포트 번호를 열고 서버에 SYN을 보냄&lt;/li>
&lt;li>서버는 클라이언트의 요청을 받고 SYN + ACK 패킷을 보냄&lt;/li>
&lt;li>클라이언트가 연결 요청에 대한 서버 응답을 확인했음을 ACK 패킷을 보냄&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>연결 해제 과정&lt;/strong>&lt;/p>
&lt;p>&lt;img src="images/2020-05-28-03-14-35.png" alt="연결 해제 과정">&lt;/p>
&lt;ol>
&lt;li>통신 중인 상태(Established)&lt;/li>
&lt;li>클라이언트가 서버에 FIN 패킷을 보내서 통신을 끊고자 함을 전달&lt;/li>
&lt;li>서버는 연결 종료 요청을 확인하고 ACK 패킷으로 응답, 연결을 종료한다는 의미에서 FIN 패킷을 보냄&lt;/li>
&lt;li>클라이언트는 연결 종료 요청에 대한 서버의 응답을 확인했다는 의미로 ACK 패킷을 서버에 보냄&lt;/li>
&lt;/ol>
&lt;h4 id="udpuser-datagram-protocol">UDP(User Datagram Protocol)&lt;/h4>
&lt;p>비연결 지향형 프로토콜로 상대방이 보낸 응답에 확인하지 않는다.&lt;/p>
&lt;ul>
&lt;li>특징
&lt;ul>
&lt;li>데이터의 목적지 확인 절차를 생략하므로 네트워크 부하가 적음&lt;/li>
&lt;li>데이터의 비신뢰성&lt;/li>
&lt;li>수신한 데이터 무결성 보장 X&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="응용-계층">응용 계층&lt;/h3>
&lt;p>우리가 사용하는 응용 프로그램이 네트워크와 통신하기 위해 사용하는 프로토콜&lt;/p>
&lt;h4 id="ftpfile-transfer-protocol">FTP(File Transfer Protocol)&lt;/h4>
&lt;p>파일 전송을 위한 가장 기본 프로토콜&lt;/p>
&lt;ul>
&lt;li>연결 방식
&lt;ul>
&lt;li>컨트롤 연결
&lt;ul>
&lt;li>21번 포트를 열고 클라이언트 요청 대기(수동적 포트 오픈)&lt;/li>
&lt;li>클라이언트에서 포트를 설정하고 FTP 요청(능동적 포트 오픈)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>데이터 연결
&lt;ul>
&lt;li>클라이언트에서 임의의 포트 오픈 (수동적 포트 오픈)&lt;/li>
&lt;li>클라이언트에서 PORT 명령어로 포트 번호를 서버에게 전송&lt;/li>
&lt;li>서버에서 20번 포트를 오픈 (수동적 포트 오픈)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="telnet">Telnet&lt;/h4>
&lt;p>사용자가 원격에 있는 서버에 로그인하도록 TCP 연결을 설정하며, 단말기가 원격 컴퓨터 바로 옆에 있는 것처럼 직접 조작할 수 있도록 한다.&lt;/p>
&lt;ul>
&lt;li>기능
&lt;ul>
&lt;li>네트워크 가상 단말기 기능&lt;/li>
&lt;li>클라이언트-서버 간 통신 옵션 교환 메커니즘&lt;/li>
&lt;li>양단 통신 대칭적 수행&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Til: Hierarchy</title><link>http://Jeonghun-Ban.github.io/til/network/hierarchy/</link><pubDate>Mon, 16 Nov 2020 00:00:00 +0000</pubDate><guid>http://Jeonghun-Ban.github.io/til/network/hierarchy/</guid><description>
&lt;p>1980년대 초 ISO(International Organization for Standardization)는 여러 업체가 만든 시스템을 상호 연동 가능케 하는 표준 네트워크 모델 제정의 필요성을 인식하고, 이런 요구를 수용해 OSI(Open System Interconnection) 네트워크 모델을 만들었다.&lt;/p>
&lt;p>&lt;img src="images/2020-05-27-22-18-02.png" alt="OSI 7계층">&lt;/p>
&lt;h2 id="물리-계층">물리 계층&lt;/h2>
&lt;p>시스템 간의 연결 선으로, 실제 장치를 연결하는 데 필요한 전기적, 물리적 세부 사항을 정의&lt;/p>
&lt;h3 id="케이블">케이블&lt;/h3>
&lt;p>랜(LAN) 케이블이 대표적이지만 케이블의 속도에 따라 CAT 1~6로 나뉘며 재질에 따라 구분된다.&lt;/p>
&lt;p>&lt;strong>케이블의 구분&lt;/strong>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>구분&lt;/th>
&lt;th>내용&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>UTP(Unshielded Twisted Pair)&lt;/td>
&lt;td>두 선 간의 전자기 유도를 줄이기 위해 절연의 구리선이 서로 꼬여 있다. 제품 전선과 피복만으로 구성&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>FTP(Foil Screened Twisted Pair)&lt;/td>
&lt;td>알루미늄 은박이 4가닥 선을 감싸고 있다. UTP보다 절연 기능이 탁월해 공장 배선용으로 많이 사용&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>STP(Shielded Twisted Pair)&lt;/td>
&lt;td>연선으로 된 케이블 겉에 외부 피복, 또는 차폐재가 추가(쉴드 처리), 차폐재가 접지 역할을 하므로 외부 노이즈를 차단하거나 전기적 신호 간섭을 줄이는 데 탁월&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>일반적으로 사용하는 랜 케이블은 CAT 5(or CAT 6)인 UTP 케이블이다.&lt;/p>
&lt;h3 id="관련-장비">관련 장비&lt;/h3>
&lt;h4 id="리피터">리피터&lt;/h4>
&lt;p>네트워크를 연장하기 위한 장비로 신호 세기를 증가시키는 역할을 한다. 요즘에는 모든 네트워크 장비에 공통적으로 들어가는 기능이 되어 별도 장비로 사용하지는 않는다.&lt;/p>
&lt;h4 id="더미-허브">더미 허브&lt;/h4>
&lt;p>스위치의 예전 형태로 네트워크 구조가 버스 구조를 하고 있다. 허브는 스위치와 사용 방법이 똑같으나 패킷을 보낼 때 데이터가 모든 노드에게 전달된다는 점이 다르다.&lt;/p>
&lt;h2 id="데이터-링크-계층">데이터 링크 계층&lt;/h2>
&lt;p>점대점(point-to-point) 간 신뢰성 있는 전송을 보장하기 위한 계층&lt;/p>
&lt;ul>
&lt;li>CRC 기반의 오류 제어와 흐름 제어가 필요&lt;/li>
&lt;li>네트워크를 구성하는 개체들 간 데이터를 전달&lt;/li>
&lt;li>물리 계층에서 발생할 수 있는 오류를 찾아 수정하기 위한 기능적, 절차적 수단을 제공&lt;/li>
&lt;/ul>
&lt;h3 id="mac-주소">MAC 주소&lt;/h3>
&lt;p>데이터 링크 계층을 간단히 설명하면 하드웨어 주소만으로 통신하는 계층이다. 하드웨어 주소인 MAC은 네트워크 카드에 할당되는 고유 주소로 12개의 16진수로 구성된다. 앞 6자리는 제조사 정보(OUI, Organizational Unique Identifier)이며 뒤쪽 자리는 호스트 식별자(Host Identifier)로 제조사에서 임의로 붙이는 일련번호이다.&lt;/p>
&lt;h3 id="네트워크-종류">네트워크 종류&lt;/h3>
&lt;p>데이터 링크 계층에는 이더넷 외에도 몇 가지 주요 네트워크가 존재한다.&lt;/p>
&lt;h4 id="x25">X.25&lt;/h4>
&lt;p>ITU-T에 의해 규격화된 통신 규약으로 단말 장치(DTE, Data Terminal Equipment)와 회선종단장치(DCE, Data Circuit-terminating Equipment) 간의 상호 접속에 대해서만 규정한다.&lt;/p>
&lt;blockquote>
&lt;p>회선종단장치: 네트워크를 통해 데이터를 아날로그나 디지털 신호 형태로 송수신하는 장치&lt;/p>
&lt;/blockquote>
&lt;h4 id="프레임-릴레이">프레임 릴레이&lt;/h4>
&lt;p>디지털 전송 통로 품질의 향상에 따라 불필요한 전송 오류 제어나 흐름 제어 등 복잡한 기능을 최소화하고, 망 종단 장치에서 처리하도록 함으로써 고속 전송을 실현하는 고속 데이터 전송 기술이다. X.25 패킷 교환망의 10배까지 구현 가능&lt;/p>
&lt;h4 id="atm">ATM&lt;/h4>
&lt;p>고속의 데이터를 53Byte 셀로 처리하는 VLSI 기술로, 실시간 영상 전송과 같은 고속 통신에 사용한다.&lt;/p>
&lt;h3 id="관련-장비-1">관련 장비&lt;/h3>
&lt;h4 id="브리지">브리지&lt;/h4>
&lt;p>랜과 랜을 연결하는 네트워크 장치로, 데이터 링크 계층에서 통신 선로를 따라 한 네트워크에서 그 다음 네트워크로 프레임을 복사하는 역할을 한다.&lt;/p>
&lt;blockquote>
&lt;p>프레임은 L2(Layer 2, 데이터 링크 계층)에서 사용되는 데이터 전송 단위이다.&lt;/p>
&lt;/blockquote>
&lt;h4 id="스위치">스위치&lt;/h4>
&lt;p>기본적으로 L2에서 작동하는 스위치를 말한다. L3, L4 스위치는 L2 스위치에 상위 계층의 네트워킹 기능을 추가한 것이다. L2 스위치는 스타형 네트워크로 더미 허브의 패킷 간 충돌을 해결하는 획기적 방안이었다.&lt;/p>
&lt;h3 id="스위칭">스위칭&lt;/h3>
&lt;p>&lt;strong>패킷 전송 방식&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>컷스루(cut-through)
&lt;ul>
&lt;li>수신한 프레임의 목적지 주소를 확인하고 해당 포트로 즉시 전송&lt;/li>
&lt;li>지연 시간 최소화&lt;/li>
&lt;li>수신 패킷에 오류있을 시, 수신 장치에서 폐기&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>저장 후 전송(store &amp;amp; forward)
&lt;ul>
&lt;li>완저히 프레임을 수신하여 버퍼에 보관&lt;/li>
&lt;li>CRC 등 오류를 확인하고 정상 프레임을 전송&lt;/li>
&lt;li>전송 지연이 발생하지만 브리지나 라우터보다 신속&lt;/li>
&lt;li>속도가 다른 포트가 연결된 경우 반드시 사용해야 함&lt;/li>
&lt;li>최근에는 컷스루와 동시지원이 일반적&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>인텔리전트 스위칭(intelligent switching)
&lt;ul>
&lt;li>평소에는 컷스루 방식으로 작동&lt;/li>
&lt;li>오류 발생시 저장 후 전송 모드로 자동 전환&lt;/li>
&lt;li>오류가 0이 되면 다시 컷스루로 전환&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>전이중(full-duplex)
&lt;ul>
&lt;li>송신 포트와 수신 포트를 분리&lt;/li>
&lt;li>반이중 방식보다 성능이 두배&lt;/li>
&lt;li>충돌이 없으므로 전송거리 제한 연장 가능&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>스위치 테이블&lt;/strong>
데이터 링크 계층에서 스위치는 시스템 간의 원활한 통신을 위해 주소 테이블을 생성하고 관리&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>포트&lt;/th>
&lt;th>MAC주소&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>1번 포트&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2번 포트&lt;/td>
&lt;td>서버의 MAC 주소&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>3번 포트&lt;/td>
&lt;td>클라이언트의 MAC 주소&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>4번 포트&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;blockquote>
&lt;p>스위치는 IP주소를 기억하지 않으며 MAC 주소만을 포트에 매칭한다.&lt;/p>
&lt;/blockquote>
&lt;h2 id="네트워크-계층">네트워크 계층&lt;/h2>
&lt;p>여러 노드를 거칠 때마다 경로를 찾아주는 역할을 하는 계층&lt;/p>
&lt;ul>
&lt;li>전송 계층이 요구하는 서비스 품질(QoS)을 제공하기 위한 절차적, 기능적 수단을 제공&lt;/li>
&lt;li>라우팅, 흐름 제어, 단편화, 오류 제어 등 수행&lt;/li>
&lt;li>라우터와 L3 스위치가 여기에 해당&lt;/li>
&lt;/ul>
&lt;h3 id="라우터">라우터&lt;/h3>
&lt;p>둘 이상의 네트워크를 연결하거나 분리하는 역할을 수행&lt;/p>
&lt;p>&lt;strong>주요 기능&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>네트워크를 서로 연결
&lt;ul>
&lt;li>각기 독립적으로 구성된 네트워크들을 연결&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>패킷 스위칭
&lt;ul>
&lt;li>한 포트로 패킷을 받아서, 다른 포트로 전송&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>경로 설정
&lt;ul>
&lt;li>패킷 교환망에서 최적 경로를 찾기 위한 라우팅 테이블을 구성&lt;/li>
&lt;li>이에 따라 패킷을 목적지까지 가장 빠르게 전송&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="라우팅">라우팅&lt;/h3>
&lt;p>네트워크상에서 주소를 이용, 목적지까지 경로를 체계적으로 결정하는 경로선택 과정&lt;/p>
&lt;ul>
&lt;li>정적 라우팅
&lt;ul>
&lt;li>관리자 권한으로 특정 경로를 통해서만 패킷이 지날 수 있도록 설정한 것&lt;/li>
&lt;li>네트워크 변경사항이 발생할 때 라우팅 테이블을 수동으로 직접 고쳐줘야 함&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>동적 라우팅
&lt;ul>
&lt;li>네트워크 연결 상태를 라우터가 스스로 파악, 최적 경로 선택&lt;/li>
&lt;li>네트워크 연결 형태가 변경되어도 자동으로 문제 해결&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="전송-계층">전송 계층&lt;/h2>
&lt;p>양 끝단(end-to-end)의 사용자들이 신뢰성 있는 데이터를 주고받을 수 있게 함으로, 상위 계층이 데이터 전달의 유효성이나 효율성을 고려하지 않아도 되게 함&lt;/p>
&lt;ul>
&lt;li>시퀸스 넘버 기반의 오류 제어 방식을 사용&lt;/li>
&lt;li>특정 연결의 유효성 제어&lt;/li>
&lt;li>&lt;code>TCP&lt;/code>는 연결 지향 프로토콜
&lt;ul>
&lt;li>패킷 전송이 유효한가 판단, 재전송&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="port">port&lt;/h3>
&lt;p>전송 계층의 대표적인 프로토콜인 TCP는 포트(port)라는 주소를 가진다. IP가 시스템의 논리적 주소라면, 포트는 시스템에 도착한 이후 찾아갈 응용 프로그램의 주소라 할 수 있다.&lt;/p>
&lt;ul>
&lt;li>0~65535(2^16)번까지 존재
&lt;ul>
&lt;li>0~1023번을 잘 알려진 포트라 함(well known port)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>출발지 포트는 사용하지 않는 임의의 포트를 할당
&lt;ul>
&lt;li>1025~65535번 중 할당&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="세션-계층">세션 계층&lt;/h2>
&lt;p>양 끝단의 응용 프로세스가 통신을 관리하기 위한 방법을 제공&lt;/p>
&lt;ul>
&lt;li>동시 송수신 방식, 반이중 방식, 전이중 방식의 통신&lt;/li>
&lt;li>체크 포인팅과 유휴, 종류, 재시작 과정 등을 수행&lt;/li>
&lt;li>&lt;code>TCP/IP 세션&lt;/code>을 만들고 없애는 책임&lt;/li>
&lt;/ul>
&lt;h2 id="표현-계층">표현 계층&lt;/h2>
&lt;p>데이터에 대한 구조를 하나의 통일된 형식을 표현&lt;/p>
&lt;ul>
&lt;li>응용 프로그램 계층 간의 서로 다른 표현을 상호 인식하기 위한 정보 정의&lt;/li>
&lt;li>데이터 압축과 암호화
&lt;ul>
&lt;li>이에 대한 정보가 헤더에 담김&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="응용-계층">응용 계층&lt;/h2>
&lt;p>사용자나 응용 프로그램 사이에 데이터 교환을 가능하게 하는 계층&lt;/p>
&lt;ul>
&lt;li>HTTP, FTP, 터미널 서비스, 메일 프로그램, 디렉토리 서비스 등&lt;/li>
&lt;/ul></description></item></channel></rss>