<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Jeonghun-Ban – Symmetric-Cryptography</title><link>http://Jeonghun-Ban.github.io/til/security/cryptology/symmetric-cryptography/</link><description>Recent content in Symmetric-Cryptography on Jeonghun-Ban</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Mon, 16 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="http://Jeonghun-Ban.github.io/til/security/cryptology/symmetric-cryptography/index.xml" rel="self" type="application/rss+xml"/><item><title>Til: Introduction</title><link>http://Jeonghun-Ban.github.io/til/security/cryptology/symmetric-cryptography/introduction/</link><pubDate>Mon, 16 Nov 2020 00:00:00 +0000</pubDate><guid>http://Jeonghun-Ban.github.io/til/security/cryptology/symmetric-cryptography/introduction/</guid><description>
&lt;p>암호화할 때 사용하는 키와 복호화할 때 사용하는 키가 같은 암호 알고리즘&lt;/p>
&lt;h2 id="블록-암호">블록 암호&lt;/h2>
&lt;p>치환과 전치를 이용하여 평문을 일정 단위(블록)로 나누어서 암호문을 생성하는 것&lt;/p>
&lt;h3 id="확산과-혼돈">확산과 혼돈&lt;/h3>
&lt;ul>
&lt;li>확산(Diffusion): &lt;code>평문과 암호문&lt;/code> 관계를 숨김&lt;/li>
&lt;li>혼돈(Confusion): &lt;code>암호문과 키&lt;/code>의 관계를 숨김&lt;/li>
&lt;/ul>
&lt;h3 id="전치-요소p-box">전치 요소(P-box)&lt;/h3>
&lt;p>평문 비트를 전치시키는 역할&lt;/p>
&lt;ul>
&lt;li>단순 P-box
&lt;ul>
&lt;li>입력받는 n 비트와 출력되는 m 비트의 크기가 같음(n = m)&lt;/li>
&lt;li>역함수가 존재&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>확장 P-box
&lt;ul>
&lt;li>n 비트를 입력받아 m 비트를 출력(n &amp;lt; m)&lt;/li>
&lt;li>입력 비트 중 특정 비트는 한 개 이상의 출력 비트와 연결됨&lt;/li>
&lt;li>비트의 양을 증가시키기 위해 사용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>축소 P-box
&lt;ul>
&lt;li>n 비트를 입력받아 m 비트를 출력(n &amp;gt; m)&lt;/li>
&lt;li>입력으로 사용된 비트 중 특정 비트는 소실됨&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="치환-요소s-box">치환 요소(S-box)&lt;/h3>
&lt;p>평문 비트를 치환하는 역할&lt;/p>
&lt;blockquote>
&lt;p>입력되는 n 비트와 출력되는 m 비트의 크기가 같은 경우에만 역함수 존재&lt;/p>
&lt;/blockquote>
&lt;h3 id="합성-암호product-ciphers">합성 암호(Product Ciphers)&lt;/h3>
&lt;p>S-box와 P-box, 그 외의 요소들을 결합하여 합성 암호를 만들어낸다.&lt;/p>
&lt;blockquote>
&lt;p>이 합성 암호(Round)를 반복 사용함으로 확산과 혼돈 성질을 만족시킴&lt;/p>
&lt;/blockquote>
&lt;h4 id="feistel">Feistel&lt;/h4>
&lt;ul>
&lt;li>대부분의 대칭 블록 암호 알고리즘(ex. DES)의 기반&lt;/li>
&lt;li>n 비트의 블록을 반으로 나누어서 반복된 연산 수행(3번 이상의 짝수 라운드)&lt;/li>
&lt;li>&lt;code>암호화 과정 = 복호화 과정&lt;/code>&lt;/li>
&lt;li>암호강도 결정 요소
&lt;ul>
&lt;li>평문 블록 길이(64비트 이상)&lt;/li>
&lt;li>키 K의 길이(64비트 내외)&lt;/li>
&lt;li>라운드 수(16회 이상)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>괄호의 조건이 충족되면 충분히 안전함을 의미&lt;/p>
&lt;/blockquote>
&lt;h4 id="spnsubstitution-permutation-network">SPN(Substitution-Permutation Network)&lt;/h4>
&lt;ul>
&lt;li>입력을 여러 개의 소블록으로 분리&lt;/li>
&lt;li>각 소블록을 &lt;code>S-box&lt;/code>로 입력하여 대치&lt;/li>
&lt;li>&lt;code>S-box의 출력&lt;/code>을 &lt;code>P-box로 전치&lt;/code>하는 과정을 반복&lt;/li>
&lt;/ul>
&lt;h2 id="스트림-암호">스트림 암호&lt;/h2>
&lt;p>키스트림을 이용하여 비트 혹은 바이트 단위로 순차적으로 암호화&lt;/p>
&lt;h3 id="동기식-스트림-암호">동기식 스트림 암호&lt;/h3>
&lt;ul>
&lt;li>키 스트림은 &lt;code>평문 또는 암호문 스트림과 독립적&lt;/code>&lt;/li>
&lt;li>암ㆍ복호화 과정에서 &lt;code>상호 동기화&lt;/code> 필요&lt;/li>
&lt;/ul>
&lt;h4 id="otpone-time-pad">OTP(One Time Pad)&lt;/h4>
&lt;ul>
&lt;li>암호화를 수행할 때마다 &lt;code>랜덤 키 스트림&lt;/code> 사용&lt;/li>
&lt;li>이론적으로 해독 불가 (Shannon에 의해 증명)&lt;/li>
&lt;/ul>
&lt;h4 id="귀환-시프트-레지스터fsr-feedback-shift-register">귀환 시프트 레지스터(FSR, Feedback Shift Register)&lt;/h4>
&lt;ul>
&lt;li>&lt;code>시프트 레지스터&lt;/code>와 &lt;code>귀환 함수&lt;/code>로 구성&lt;/li>
&lt;li>S/W, H/W 환경에서 구현 가능&lt;/li>
&lt;li>H/W에서 구현 용이&lt;/li>
&lt;/ul>
&lt;h4 id="선형-귀환-시프트-레지스터lfsr-linear-feedback-shift-register">선형 귀환 시프트 레지스터(LFSR, Linear Feedback Shift Register)&lt;/h4>
&lt;ul>
&lt;li>많은 스트림 암호가 LFSR을 이용&lt;/li>
&lt;li>선형성으로 인해 공격에 취약&lt;/li>
&lt;/ul>
&lt;h3 id="비동기식-스트림-암호">비동기식 스트림 암호&lt;/h3>
&lt;ul>
&lt;li>키 스트림의 각 비트는 이전의 &lt;code>평문이나 암호문에 종속적&lt;/code>으로 결정&lt;/li>
&lt;li>키스트림과 평문의 함수관계로 암호문이 생성되므로 변조되어도 &lt;code>자기 동기화&lt;/code> 가능&lt;/li>
&lt;li>변조된 암호문이 후속 암호문 복호화에 사용되지 않아 &lt;code>오류 파급 낮음&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="비선형-귀환-시프트-레지스터nlfsr-non-linear-feedback-shift-register">비선형 귀환 시프트 레지스터(NLFSR, Non-Linear Feedback Shift Register)&lt;/h4>
&lt;ul>
&lt;li>비선형성으로 LFSR보다 안전&lt;/li>
&lt;li>&lt;code>자기 동기식 스트림 암호&lt;/code>라고도 함&lt;/li>
&lt;/ul></description></item><item><title>Til: AES</title><link>http://Jeonghun-Ban.github.io/til/security/cryptology/symmetric-cryptography/aes/</link><pubDate>Mon, 16 Nov 2020 00:00:00 +0000</pubDate><guid>http://Jeonghun-Ban.github.io/til/security/cryptology/symmetric-cryptography/aes/</guid><description>
&lt;p>기존에 사용하던 DES의 문제점은 키의 길이가 54bit로 짧아 &lt;code>Brute Force Attack(무차별 대입 공격)&lt;/code>이 가능하다는 것이었다. 그래서 NIST(미국 국립기술표준원)는 DES를 대체하기 위한 알고리즘을 공모하였고 최종적으로 AES가 선정되었다.&lt;/p>
&lt;h2 id="구조">구조&lt;/h2>
&lt;p>&lt;img src="images/2020-05-24-20-22-40.png" alt="AES 구조">&lt;/p>
&lt;ul>
&lt;li>&lt;code>non-Feistel&lt;/code> 알고리즘, &lt;code>SPN&lt;/code> 구조&lt;/li>
&lt;li>키 사이즈에 따라 라운드가 상이
&lt;ul>
&lt;li>AES-128(10라운드)&lt;/li>
&lt;li>AES-192(12라운드)&lt;/li>
&lt;li>AES-256(14라운드)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="라운드-과정">라운드 과정&lt;/h2>
&lt;p>&lt;img src="images/2020-05-24-20-59-09.png" alt="Round">&lt;/p>
&lt;ul>
&lt;li>SubBytes
&lt;ul>
&lt;li>바이트 단위로 치환&lt;/li>
&lt;li>비 선형성을 갖는 S-box를 적용&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>ShiftRows
&lt;ul>
&lt;li>행 단위로 순환 시프트 수행&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>MixColumns
&lt;ul>
&lt;li>열 단위로 혼합&lt;/li>
&lt;li>높은 확산을 제공&lt;/li>
&lt;li>마지막 라운드에서 수행 X&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>AddRoundKey
&lt;ul>
&lt;li>라운드 키와 state를 XOR 연산&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Til: DES</title><link>http://Jeonghun-Ban.github.io/til/security/cryptology/symmetric-cryptography/des/</link><pubDate>Mon, 16 Nov 2020 00:00:00 +0000</pubDate><guid>http://Jeonghun-Ban.github.io/til/security/cryptology/symmetric-cryptography/des/</guid><description>
&lt;p>1973년, 미국 국립기술표준원(NIST)에서 국가적으로 사용할 대칭키 암호시스템으로 채택&lt;/p>
&lt;h2 id="구조">구조&lt;/h2>
&lt;p>&lt;img src="images/2020-05-24-17-42-53.png" alt="DES 구조">&lt;/p>
&lt;ul>
&lt;li>데이터 길이
&lt;ul>
&lt;li>평문: 64bit&lt;/li>
&lt;li>키: 56bit(오류검출비트 8bit 제외)&lt;/li>
&lt;li>암호문: 64bit&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>2개의 P-box
&lt;ul>
&lt;li>초기 전치(initial permutation)&lt;/li>
&lt;li>최종 전치(final permutation)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>라운드 키 생성기
&lt;ul>
&lt;li>56비트 키에서 &lt;code>48비트의 라운드 키&lt;/code>를 생성&lt;/li>
&lt;li>이러한 라운드 키는 각 라운드에서 사용됨&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>라운드 함수
&lt;ul>
&lt;li>&lt;code>Feistel&lt;/code> 암호로 되어 있음&lt;/li>
&lt;li>혼합기(mixer) 교환기(swapper)가 존재&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="des-함수">DES 함수&lt;/h2>
&lt;p>라운드 함수를 구성하는 함수로 4가지로 이루어져 있음&lt;/p>
&lt;p>&lt;img src="images/2020-05-24-19-45-56.png" alt="DES 함수">&lt;/p>
&lt;ul>
&lt;li>확장 P-box&lt;/li>
&lt;li>키 XOR&lt;/li>
&lt;li>8개의 S-box&lt;/li>
&lt;li>단순 P-box&lt;/li>
&lt;/ul>
&lt;h2 id="설계-기준">설계 기준&lt;/h2>
&lt;ul>
&lt;li>S-box
&lt;ul>
&lt;li>비선형 함수&lt;/li>
&lt;li>&lt;code>혼돈&lt;/code>을 제공&lt;/li>
&lt;li>한 비트가 변경되면 두 비트 이상이 바뀜&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>P-box
&lt;ul>
&lt;li>&lt;code>확산&lt;/code>의 성질을 만족&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="3des">3DES&lt;/h2>
&lt;p>DES를 세 번 반복해서 사용한 것으로 &lt;code>암호화-복호화-암호화&lt;/code> 과정을 거친다.&lt;/p>
&lt;h3 id="특징">특징&lt;/h3>
&lt;ul>
&lt;li>H/W에서 효율적이나 S/W에서 비효율적&lt;/li>
&lt;li>느린 처리 속도&lt;/li>
&lt;/ul>
&lt;h3 id="종류">종류&lt;/h3>
&lt;ul>
&lt;li>&lt;code>2개의 키&lt;/code>를 이용하는 3중 DES
&lt;ul>
&lt;li>첫 번째와 세 번째에서 동일한 키 사용&lt;/li>
&lt;li>기지 평문 공격에 취약&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>3개의 키&lt;/code>를 이용하는 3중 DES(DES-EDE3)
&lt;ul>
&lt;li>평문을 첫 번째 키로 암호화&lt;/li>
&lt;li>그 결과를 두 번째 키로 복호화&lt;/li>
&lt;li>그 결과를 세 번째 키로 암호화&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item></channel></rss>